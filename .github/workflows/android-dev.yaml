name: Flutter - Android Build Dev

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

env:
  ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
  ANDROID_KEY_PROPERTIES: ${{ secrets.ANDROID_KEY_PROPERTIES }}
  ANDROID_LOCAL_PROPERTIES: ${{ secrets.ANDROID_LOCAL_PROPERTIES }}
  FLUTTER_TRANSLATION_SHEET_CREDENTIALS: ${{ secrets.FLUTTER_TRANSLATION_SHEET_CREDENTIALS }}
  ENV_DEV: ${{ secrets.ENV_DEV }}
  ENV_QA: ${{ secrets.ENV_QA }}
  ENV_PROD: ${{ secrets.ENV_PROD }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: DEV
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: gradle
      
      - name: Cache Gradle
        uses: actions/cache@v4
        id: gradle-cache
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: |
            ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup key.properties file
        run: |
          echo "${{env.ANDROID_KEY_PROPERTIES}}" | base64 --decode > android/key.properties

      - name: Setup local.properties file
        run: |
          echo "${{env.ANDROID_LOCAL_PROPERTIES}}" | base64 --decode > android/local.properties

      - name: Setup keystore file
        run: |
          echo "${{env.ANDROID_KEYSTORE}}" | base64 --decode > android/keystore/tonggarden.jks

      - name: Setup Flutter Translation Sheet Credentials
        run: |
          echo "${{env.FLUTTER_TRANSLATION_SHEET_CREDENTIALS}}" | base64 --decode > packages/common/credentials.json 
          
      - name: Setup .env file
        run: |
          echo "${{env.ENV_DEV}}" | base64 --decode > packages/core/.dev.env
          echo "${{env.ENV_QA}}" | base64 --decode > packages/core/.qa.env
          echo "${{env.ENV_PROD}}" | base64 --decode > packages/core/.prod.env

      - name: Setup FVM
        uses: kuhnroyal/flutter-fvm-config-action/config@v3
        id: fvm-config-action

      # Cache Flutter SDK installed by FVM
      - name: Cache Flutter SDK
        uses: actions/cache@v4
        id: flutter-sdk-cache
        with:
          path: .fvm/flutter_sdk  # Path where FVM stores the Flutter SDK
          key: |
            ${{ runner.os }}-fvm-flutter-${{ steps.fvm-config-action.outputs.FLUTTER_VERSION }}
          restore-keys: |
            ${{ runner.os }}-fvm-flutter-

      # Cache Pub dependencies
      - name: Cache Pub dependencies
        uses: actions/cache@v4
        id: pub-cache
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.fvm-config-action.outputs.FLUTTER_VERSION }}
          channel: ${{ steps.fvm-config-action.outputs.FLUTTER_CHANNEL }}

      - name: Install FVM
        run: |
          dart pub global activate fvm

      - name: Use FVM Flutter Version
        run: |
          fvm install
          fvm use $(fvm global) --force

      - name: Install Flutter Dependencies
        run: |
          fvm flutter pub get >> /dev/null  

      - name: Setup Flutter Translation Sheet
        run: |
          cd packages/common
          fvm dart run flutter_translation_sheet:main fetch
          cd ../../

      - name: Build Runner Setup
        run: |
          cd packages/core
          pwd
          
          echo Getting dependencies
          fvm flutter pub get >> /dev/null

          echo Running build_runner in packages/core
          fvm flutter pub run build_runner build -d 
          
          echo Done running build_runner. Navigating up to root directory
          cd ../../    
          fvm flutter pub get >> /dev/null

      - name: Auto-format Dart code
        run: fvm dart format .

      - name: Verify formatting
        run: fvm dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        run: fvm flutter analyze --fatal-warnings

      - name: Run tests
        run: fvm flutter test

      - name: Build APK
        run: fvm flutter build apk --release --build-name=1.0.0 --build-number=1 --obfuscate --split-debug-info=build/app/symbols --flavor dev -t lib/main_dev.dart

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: dev-apk
          path: build/app/outputs/flutter-apk/*.apk